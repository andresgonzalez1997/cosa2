def excecute_process():
    sp = get_sharepoint_interface("retailpricing")
    if not sp:
        print("[ERROR] No se pudo obtener la interfaz de SharePoint.")
        return

    files = sp.files_in_folder(REPOSITORY)
    if not files:
        print(f"[INFO] No hay archivos en {REPOSITORY}")
        return

    # Filtrar PDFs
    pdf_files = [f for f in files if f["file_name"].lower().endswith(".pdf")]
    if not pdf_files:
        print(f"[INFO] No se encontraron PDFs en {REPOSITORY}")
        return

    # Conexión a CDP (ambiente de producción en este ejemplo)
    cdp = CDPInterface(env.production, crd.process_account)

    total = len(pdf_files)
    for idx, pdf_info in enumerate(pdf_files, start=1):
        pdf_filename = pdf_info["file_name"]
        pdf_sharepoint_path = pdf_info["file_path"]
        print(f"\n[{idx}/{total}] Procesando: {pdf_filename}")

        if not os.path.exists(LOCAL_REPOSITORY):
            os.makedirs(LOCAL_REPOSITORY, exist_ok=True)

        # Descargar PDF
        local_pdf_path = sp.download_file(pdf_sharepoint_path, LOCAL_REPOSITORY)
        if not local_pdf_path:
            print("[ERROR] No se pudo descargar el PDF.")
            continue

        # Parsear (horizontal)
        df = pfh.read_file(str(local_pdf_path))

        # Observa columnas
        print("[DEBUG] Columnas del DF tras parsear:\n", df.columns.tolist())
        if "ref_col" in df.columns:
            print("[WARN] Se detectó ref_col en el DF... se eliminará.")
            df = df.drop(columns=["ref_col"], errors="ignore")

        print(df.head(5))

        # Forzar tipos
        df = set_column_types(df)
        print("[DEBUG] Columnas tras set_column_types:\n", df.columns.tolist())

        # Revisar shape
        print("[INFO] DataFrame shape:", df.shape)
        print(df.head(10))

        if df.shape[0] > 0:
            # Nombre base sin extensión
            raw_name = pathlib.Path(pdf_filename).stem
            # Aplica la lógica de limpieza
            base_name = correct_file_name(raw_name)
            print("[DEBUG] Nombre base para la tabla temporal:", base_name)

            # Subir a la tabla final
            if cdp.upload_data(df, "comp_price_horizontal_files", base_name):
                print(f"[INFO] '{pdf_filename}' subido correctamente a 'comp_price_horizontal_files'.")
            else:
                print("[ERROR] Falló la subida a CDP.")
        else:
            print("[INFO] DF vacío, no se suben datos.")

        # Eliminar de SharePoint (descomentar si ya confirmaste la subida):
        
        try:
            if sp.delete_file(pdf_sharepoint_path):
                print(f"[INFO] Archivo '{pdf_filename}' eliminado de SharePoint.")
            else:
                print(f"[WARN] No se pudo eliminar '{pdf_filename}' de SharePoint.")
        except Exception as e:
            print(f"[ERROR] Al intentar eliminar en SharePoint: {e}")
        

    print("\n[INFO] Proceso completado para todos los PDFs.")

if __name__ == "__main__":
    excecute_process()
