# ------------------------------------------------------------------ #
# ▸  EXTRACT_PLANT_LOCATION  (no usa Tabula)                         #
# ------------------------------------------------------------------ #
import re
from pathlib import Path
from typing import Optional
from PyPDF2 import PdfReader

# Expresión regular:
#   1244-STATESVILLE NC WHS  →  STATESVILLE NC
_PLANT_RX = re.compile(
    r"\d{3,4}-([A-Za-z][A-Za-z &.\-]+?)\s+([A-Z]{2})\b",
    re.I,
)

def extract_plant_location(file_path: str | Path) -> str:
    """
    Devuelve «PLANTA XX» en MAYÚSCULAS (ej.: STATESVILLE NC).
    Nunca devuelve None: si no hay match, retorna 'SIN PLANTA'.
    """
    try:
        reader = PdfReader(str(file_path))
        first_page_text = reader.pages[0].extract_text() or ""

        m = _PLANT_RX.search(first_page_text)
        if m:
            plant, state = m.group(1), m.group(2)
            return f"{plant.strip().upper()} {state.upper()}"

        # Fallback: primera línea en la que aparezca un guion y 2-letras al final
        for line in first_page_text.splitlines():
            if "-" in line and len(line.strip().split()[-1]) == 2:
                # Ej.: "1244-STATESVILLE NC WHS"  →  STATESVILLE NC
                parts = re.split(r"-|\s{2,}", line.strip())
                if len(parts) >= 2:
                    maybe_state = parts[-1].split()[-1]
                    if len(maybe_state) == 2 and maybe_state.isalpha():
                        plant = " ".join(parts[1].split()[:-1])
                        return f"{plant.upper()} {maybe_state.upper()}"

        return "SIN PLANTA"
    except Exception:
        return "SIN PLANTA"
